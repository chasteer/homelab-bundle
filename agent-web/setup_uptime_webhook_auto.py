#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞ Uptime Kuma –¥–ª—è Homelab Agent
"""

import os
import requests
import json
import time
import subprocess

# –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
KUMA_URL = os.environ.get("UPTIME_KUMA_URL", "http://192.168.1.200:3001")
AGENT_WEBHOOK_URL = os.environ.get("AGENT_WEBHOOK_URL", "http://192.168.1.200:8000/api/webhook/uptime-kuma")

def get_agent_internal_ip():
    """–ü–æ–ª—É—á–∞–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π IP –∞–≥–µ–Ω—Ç–∞ –≤ Docker —Å–µ—Ç–∏"""
    try:
        result = subprocess.run([
            "sudo", "docker", "inspect", "homelab-agent", 
            "--format", "{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}"
        ], capture_output=True, text=True, check=True)
        
        internal_ip = result.stdout.strip()
        if internal_ip:
            return internal_ip
    except Exception as e:
        print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π IP –∞–≥–µ–Ω—Ç–∞: {e}")
    
    return "172.20.0.11"  # Fallback IP

def check_kuma_access():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Uptime Kuma"""
    try:
        response = requests.get(f"{KUMA_URL}/api/status", timeout=10)
        if response.status_code == 200:
            print(f"‚úÖ Uptime Kuma –¥–æ—Å—Ç—É–ø–µ–Ω: {KUMA_URL}")
            return True
        else:
            print(f"‚ùå Uptime Kuma –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Uptime Kuma: {e}")
        return False

def check_agent_webhook():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤–µ–±—Ö—É–∫–∞ –∞–≥–µ–Ω—Ç–∞"""
    try:
        response = requests.get(f"{AGENT_WEBHOOK_URL}/health", timeout=10)
        if response.status_code == 200:
            print(f"‚úÖ –í–µ–±—Ö—É–∫ –∞–≥–µ–Ω—Ç–∞ –¥–æ—Å—Ç—É–ø–µ–Ω: {AGENT_WEBHOOK_URL}")
            return True
        else:
            print(f"‚ùå –í–µ–±—Ö—É–∫ –∞–≥–µ–Ω—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≤–µ–±—Ö—É–∫—É –∞–≥–µ–Ω—Ç–∞: {e}")
        return False

def check_docker_network_connectivity():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ç–µ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏"""
    agent_ip = get_agent_internal_ip()
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:")
    print(f"   –ê–≥–µ–Ω—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π IP: {agent_ip}")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ Uptime Kuma –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∞–≥–µ–Ω—Ç—É
        result = subprocess.run([
            "sudo", "docker", "exec", "uptime-kuma", 
            "curl", "-s", "--connect-timeout", "5", 
            f"http://{agent_ip}:8000/api/webhook/uptime-kuma/health"
        ], capture_output=True, text=True)
        
        if result.returncode == 0:
            print(f"‚úÖ Uptime Kuma –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∞–≥–µ–Ω—Ç—É –ø–æ {agent_ip}")
            return True, agent_ip
        else:
            print(f"‚ùå Uptime Kuma –ù–ï –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∞–≥–µ–Ω—Ç—É –ø–æ {agent_ip}")
            return False, agent_ip
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ç–µ–≤–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False, agent_ip

def create_webhook_config(agent_internal_ip):
    """–°–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤–µ–±—Ö—É–∫–∞ –¥–ª—è Uptime Kuma"""
    webhook_config = {
        "name": "Homelab Agent Webhook",
        "type": "webhook",
        "url": f"http://{agent_internal_ip}:8000/api/webhook/uptime-kuma",
        "method": "POST",
        "contentType": "application/json",
        "retry": 3,
        "retryInterval": 60,
        "events": ["up", "down", "paused", "maintenance"],
        "isDefault": False,
        "applyExisting": True
    }
    
    print(f"\nüìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–µ–±—Ö—É–∫–∞:")
    print(json.dumps(webhook_config, indent=2, ensure_ascii=False))
    return webhook_config

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞ Uptime Kuma")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤
    if not check_kuma_access():
        print("\n‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å - Uptime Kuma –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        return
    
    if not check_agent_webhook():
        print("\n‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å - –≤–µ–±—Ö—É–∫ –∞–≥–µ–Ω—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ç–µ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    network_ok, agent_ip = check_docker_network_connectivity()
    
    if not network_ok:
        print(f"\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –°–µ—Ç–µ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print(f"   –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏—á–∏–Ω–æ–π, –ø–æ—á–µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –ø—Ä–∏—Ö–æ–¥—è—Ç.")
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    webhook_config = create_webhook_config(agent_ip)
    
    print(f"\nüìù –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ù–ê–°–¢–†–û–ô–ö–ï:")
    print("=" * 50)
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ Uptime Kuma –≤ –±—Ä–∞—É–∑–µ—Ä–µ:")
    print(f"   {KUMA_URL}")
    print("\n2. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É (—Å–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)")
    print("\n3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Settings ‚Üí Notifications")
    print("\n4. –ù–∞–∂–º–∏—Ç–µ 'Add New Notification'")
    print("\n5. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø 'Webhook'")
    print("\n6. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª—è:")
    print(f"   - Name: Homelab Agent Webhook")
    print(f"   - URL: http://{agent_ip}:8000/api/webhook/uptime-kuma ‚≠ê")
    print(f"   - Method: POST")
    print(f"   - Content Type: application/json")
    print(f"   - Events: –≤—ã–±–µ—Ä–∏—Ç–µ –≤—Å–µ (up, down, paused, maintenance)")
    
    if not network_ok:
        print(f"\n‚ö†Ô∏è  –í–ê–ñ–ù–û: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π IP {agent_ip}, –∞ –Ω–µ –≤–Ω–µ—à–Ω–∏–π!")
        print(f"   –í–Ω–µ—à–Ω–∏–π IP 192.168.1.200 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ Docker.")
    
    print("\n7. –ù–∞–∂–º–∏—Ç–µ 'Test' –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏")
    print("8. –ù–∞–∂–º–∏—Ç–µ 'Save' –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è")
    
    print(f"\nüîç –ü–†–û–í–ï–†–ö–ê –ù–ê–°–¢–†–û–ô–ö–ò:")
    print("=" * 50)
    print("–ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±—Ö—É–∫–∞:")
    print("1. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ª—é–±–æ–π —Å–µ—Ä–≤–∏—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, TorrServer)")
    print("2. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∞–≥–µ–Ω—Ç–∞:")
    print("   sudo docker logs homelab-agent | grep webhook")
    print("4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å –æ–±—Ä–∞—Ç–Ω–æ")
    print("5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–Ω–æ–≤–∞")
    
    print(f"\nüìö –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:")
    print("=" * 50)
    print("‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: UPTIME_KUMA_INTEGRATION.md")
    print("‚Ä¢ –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: WEBHOOK_CORRECT_CONFIG.md")
    print("‚Ä¢ –ü–æ—à–∞–≥–æ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞: WEBHOOK_SETUP_STEPS.md")
    print("‚Ä¢ –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–ø–æ–ª–∞–¥–æ–∫: README_SECURITY_UPDATE.md")

if __name__ == "__main__":
    main()
