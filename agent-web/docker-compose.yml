name: homelab-agent

services:
  agent:
    build: .
    container_name: homelab-agent
    restart: unless-stopped
    ports:
      - "192.168.1.200:8000:8000"
    environment:
      - TZ=${TZ:-UTC}
      - GIGACHAT_CREDENTIALS=${GIGACHAT_CREDENTIALS}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_WEBHOOK_SECRET=${GITHUB_WEBHOOK_SECRET}
      - AGENT_DB=sqlite:///app/agent.db
      - RAG_DB_DIR=/app/data/index
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /srv:/srv:ro
    networks:
      - homelab
    depends_on:
      - agent-db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  agent-db:
    image: postgres:15-alpine
    container_name: homelab-agent-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=homelab_agent
      - POSTGRES_USER=agent
      - POSTGRES_PASSWORD=${AGENT_DB_PASSWORD:-agent123}
      - TZ=${TZ:-UTC}
    volumes:
      - agent-db-data:/var/lib/postgresql/data
    networks:
      - homelab
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U agent -d homelab_agent"]
      interval: 10s
      timeout: 5s
      retries: 5

  github-polling:
    build: .
    container_name: homelab-github-polling
    restart: unless-stopped
    command: python /app/github_polling.py
    environment:
      - TZ=${TZ:-UTC}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - POLLING_INTERVAL=${POLLING_INTERVAL:-300}
      - AGENT_URL=http://agent:8000
    volumes:
      - ./github-config:/app/github-config
      - ./data:/app/data
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - homelab
    depends_on:
      - agent
    profiles:
      - polling

networks:
  homelab:
    external: true

volumes:
  agent-db-data:
