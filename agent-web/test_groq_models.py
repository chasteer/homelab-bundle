#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π Groq —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏
"""

import os
from groq import Groq

def test_groq_models():
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏ Groq —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏...")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–∫—Å–∏
    proxy_url = os.getenv("PROXY_URL")
    if proxy_url:
        print(f"üåê –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–æ–∫—Å–∏: {proxy_url}")
        os.environ['HTTP_PROXY'] = proxy_url
        os.environ['HTTPS_PROXY'] = proxy_url
    
    api_key = os.getenv("GROQ_API_KEY")
    if not api_key:
        print("‚ùå GROQ_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Groq –∫–ª–∏–µ–Ω—Ç–∞
        client = Groq(api_key=api_key)
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –º–æ–¥–µ–ª–µ–π
        print("üìã –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π...")
        models = client.models.list()
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –º–æ–¥–µ–ª–µ–π: {len(models.data)}")
        for model in models.data:
            print(f"  - {model.id}")
            
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏
        available_models = [
            "llama-3.1-70b-versatile",
            "llama-3.1-8b-instant", 
            "llama-3.3-70b-versatile",
            "mixtral-8x7b-32768"
        ]
        
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏...")
        for model_name in available_models:
            try:
                print(f"  –¢–µ—Å—Ç–∏—Ä—É–µ–º {model_name}...")
                response = client.chat.completions.create(
                    model=model_name,
                    messages=[{"role": "user", "content": "–ü—Ä–∏–≤–µ—Ç! –û—Ç–≤–µ—Ç—å –∫–æ—Ä–æ—Ç–∫–æ."}],
                    max_tokens=10
                )
                print(f"  ‚úÖ {model_name} - —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                print(f"     –û—Ç–≤–µ—Ç: {response.choices[0].message.content}")
                break
            except Exception as e:
                print(f"  ‚ùå {model_name} - –æ—à–∏–±–∫–∞: {str(e)[:100]}")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    test_groq_models()
