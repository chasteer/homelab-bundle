#!/usr/bin/env bash
set -euo pipefail

echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Homelab Agent..."

cd "$(dirname "$0")/../agent-web"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if [ ! -f ".env" ]; then
    echo "üìù –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–∞ –æ—Å–Ω–æ–≤–µ services/.env..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ services/.env
    if [ ! -f "../services/.env" ]; then
        echo "‚ùå –§–∞–π–ª ../services/.env –Ω–µ –Ω–∞–π–¥–µ–Ω"
        echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞: ./scripts/15_write_env.sh"
        exit 1
    fi
    
    # –ö–æ–ø–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ services/.env
    source ../services/.env
    
    # –°–æ–∑–¥–∞–µ–º .env –¥–ª—è –∞–≥–µ–Ω—Ç–∞
    cat > .env <<EOF
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Homelab Agent

# –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–æ–Ω–∞
TZ=${TZ:-Europe/Moscow}

# GigaChat API
GIGACHAT_CREDENTIALS=${GIGACHAT_CREDENTIALS:-}

# Tavily Search API
TAVILY_API_KEY=${TAVILY_API_KEY:-}

# GitHub API
GITHUB_TOKEN=${GITHUB_TOKEN:-}
GITHUB_WEBHOOK_SECRET=${GITHUB_WEBHOOK_SECRET:-}

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∞–≥–µ–Ω—Ç–∞
AGENT_DB_PASSWORD=agent123

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ GitHub polling
POLLING_INTERVAL=300

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
HOST=0.0.0.0
PORT=8000
DEBUG=false

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
LOG_LEVEL=INFO
LOG_FILE=/app/logs/homelab-agent.log
EOF
    
    echo "‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ services/.env"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
source .env

if [ -z "${GIGACHAT_CREDENTIALS:-}" ]; then
    echo "‚ùå GIGACHAT_CREDENTIALS –Ω–µ –∑–∞–¥–∞–Ω –≤ .env"
    exit 1
fi

if [ -z "${TAVILY_API_KEY:-}" ]; then
    echo "‚ùå TAVILY_API_KEY –Ω–µ –∑–∞–¥–∞–Ω –≤ .env"
    exit 1
fi

if [ -z "${GITHUB_TOKEN:-}" ]; then
    echo "‚ö†Ô∏è  GITHUB_TOKEN –Ω–µ –∑–∞–¥–∞–Ω. GitHub –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –±—É–¥–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
fi

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p data/index logs github-config

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ç—å homelab —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if sudo docker network ls | grep -q " homelab "; then
    echo "‚úÖ –°–µ—Ç—å homelab –Ω–∞–π–¥–µ–Ω–∞"
else
    echo "‚ùå –°–µ—Ç—å homelab –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞: ./scripts/20_deploy_core.sh"
    exit 1
fi

# –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∞–≥–µ–Ω—Ç–∞
echo "üê≥ –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∞–≥–µ–Ω—Ç–∞..."
sudo docker compose up -d --build

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –∞–≥–µ–Ω—Ç–∞..."
sleep 15

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
if sudo docker compose ps | grep -q "Up"; then
    echo "‚úÖ Homelab Agent —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!"
    echo "üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://${HOMELAB_HOST:-your_local_ip}:8000"
    echo "üìä –°—Ç–∞—Ç—É—Å: $(sudo docker compose ps)"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞..."
    if curl -f http://${HOMELAB_HOST:-your_local_ip}:8000/api/health >/dev/null 2>&1; then
        echo "‚úÖ –°–µ—Ä–≤–∏—Å –æ—Ç–≤–µ—á–∞–µ—Ç"
    else
        echo "‚ö†Ô∏è  –°–µ—Ä–≤–∏—Å –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: sudo docker compose logs agent"
    fi
else
    echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∞–≥–µ–Ω—Ç–∞"
    echo "üìã –õ–æ–≥–∏:"
    sudo docker compose logs
    exit 1
fi

echo ""
echo "üéâ Homelab Agent —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç!"
echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   sudo docker compose ps                    # –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤"
echo "   sudo docker compose logs -f agent        # –õ–æ–≥–∏ –∞–≥–µ–Ω—Ç–∞"
echo "   sudo docker compose logs -f github-polling # –õ–æ–≥–∏ GitHub polling"
echo "   sudo docker compose restart agent         # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∞–≥–µ–Ω—Ç–∞"
echo "   sudo docker compose down                  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
echo ""
echo "üîß –î–ª—è –∑–∞–ø—É—Å–∫–∞ GitHub polling:"
echo "   sudo docker compose --profile polling up -d github-polling"
echo ""
echo "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: README.md"
